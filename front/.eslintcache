[{"/Users/guillaumetecher/typed-projects/front/src/index.js":"1","/Users/guillaumetecher/typed-projects/front/src/compoments/Task.js":"2","/Users/guillaumetecher/typed-projects/front/src/compoments/Column.js":"3","/Users/guillaumetecher/typed-projects/front/src/compoments/Project.js":"4","/Users/guillaumetecher/typed-projects/front/src/App.js":"5","/Users/guillaumetecher/typed-projects/front/src/utils/fetchWrapper.js":"6","/Users/guillaumetecher/typed-projects/front/src/contexts/ProjectContext.js":"7","/Users/guillaumetecher/typed-projects/front/src/utils/simpleSchema.js":"8","/Users/guillaumetecher/typed-projects/front/src/reportWebVitals.js":"9"},{"size":500,"mtime":1609530148779,"results":"10","hashOfConfig":"11"},{"size":3762,"mtime":1610814929509,"results":"12","hashOfConfig":"11"},{"size":1183,"mtime":1609987636775,"results":"13","hashOfConfig":"11"},{"size":6142,"mtime":1610815543456,"results":"14","hashOfConfig":"11"},{"size":204,"mtime":1609607554066,"results":"15","hashOfConfig":"11"},{"size":963,"mtime":1609530775152,"results":"16","hashOfConfig":"11"},{"size":83,"mtime":1609530208933,"results":"17","hashOfConfig":"11"},{"size":1197,"mtime":1610333294358,"results":"18","hashOfConfig":"11"},{"size":362,"mtime":1609530148780,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"18vme89",{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/Users/guillaumetecher/typed-projects/front/src/index.js",[],["43","44"],"/Users/guillaumetecher/typed-projects/front/src/compoments/Task.js",["45","46","47"],"import React, { useState, useContext, useEffect } from \"react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Card, Button, Modal, Icon } from \"semantic-ui-react\";\nimport {\n  AutoForm,\n  AutoField,\n  LongTextField,\n  NumField,\n  SubmitField,\n  ErrorsField,\n} from \"uniforms-semantic\";\nimport { ProjectContext } from \"../contexts/ProjectContext\";\n\nexport function Task(props) {\n  const { display, task, nextColumnRequirements } = props;\n  const { name, _id } = task;\n\n  const [modalOpen, setModalOpen] = useState(false);\n  const [taskForm, setTaskForm] = useState([]);\n\n  const { schemaBridge, politic, updateTask, deleteTask, projectId } = useContext(\n    ProjectContext\n  );\n  useEffect(() => {\n    console.log('hey')\n    setTaskForm(generateTaskForm(politic))}, [politic])\n\n  function generateTaskForm(aPolitic) {\n    return aPolitic.reduce((all, step) => {\n      const newCompoments = step.fields.map((field) => {\n        let fieldObj = { type: \"String\" };\n        if (typeof field === \"string\") {\n          fieldObj.name = field;\n        } else {\n          fieldObj.name = field.name;\n          // deafult to String\n          fieldObj.type = field.type || fieldObj.type;\n        }\n        return pickFieldCompoment(fieldObj);\n      });\n      return [...all, ...newCompoments];\n    }, [])\n  }\n\n  function pickFieldCompoment(field) {\n    switch (field.type) {\n      case \"Text\":\n        return <LongTextField name={field.name} key={field.name} />;\n      case \"Number\":\n        return <NumField name={field.name} key={field.name} />;\n      default:\n        return <AutoField name={field.name} key={field.name} />;\n    }\n  }\n\n  function computeRequiredForNext(task, required) {\n    const missing = [];\n    required.forEach((key) => {\n      if (task[key]) return;\n      missing.push(key);\n    });\n    if (missing.length > 0) return \"next: \" + missing.join(\", \");\n    return \"\";\n  }\n\n  function renderRequiredForNext() {\n    const missingFields = computeRequiredForNext(\n      task,\n      nextColumnRequirements\n    );\n    if (missingFields)\n      return <Modal.Actions>{missingFields}</Modal.Actions>;\n    return \n  }\n\n  function renderEdit() {\n    return (\n      <Modal\n        open={modalOpen}\n        closeIcon\n        onClose={() => setModalOpen(false)}\n        onOpen={() => setModalOpen(true)}\n        trigger={\n          <Button floated=\"right\" size=\"tiny\">\n            Edit\n          </Button>\n        }\n      >\n        <Modal.Header>{name}</Modal.Header>\n        <Modal.Content>\n          <AutoForm\n            schema={schemaBridge}\n            model={task}\n            onSubmit={(newTask) => {\n              updateTask(projectId, _id, newTask);\n              setModalOpen(false);\n            }}\n          >\n          {taskForm}\n            <ErrorsField />\n\n            <SubmitField />\n          </AutoForm>\n        </Modal.Content>\n        {renderRequiredForNext()}\n      </Modal>\n    );\n  }\n\n  function displayText(desc = \"\") {\n    if (desc.length > 100) return desc.slice(0, 100) + \"...\";\n    return desc;\n  }\n  return (\n    <>\n      <Card>\n        <Card.Content>\n          <Button floated=\"right\" icon=\"trash\" basic size=\"tiny\" onClick={()=>deleteTask(_id)} />\n          {renderEdit()}\n          <Card.Header>{name}</Card.Header>\n          <Card.Meta></Card.Meta>\n          {/* make it so description is gen */}\n          {/* info/display here ? */}\n          <Card.Description>user machin</Card.Description>\n        </Card.Content>\n        {display && (\n          <Card.Content extra>\n            {display\n              .map((field) => {\n                if (task[field]) return `${field}: ${task[field]}`;\n                return \"\";\n              })\n              .join(\", \")}\n          </Card.Content>\n        )}\n      </Card>\n    </>\n  );\n}\n","/Users/guillaumetecher/typed-projects/front/src/compoments/Column.js",[],"/Users/guillaumetecher/typed-projects/front/src/compoments/Project.js",["48","49"],"/Users/guillaumetecher/typed-projects/front/src/App.js",["50"],"import logo from './logo.svg';\nimport './App.css';\n\n\nimport {Project} from './compoments/Project'\n\nfunction App() {\n  return <div className=\"app\"> <Project projectId='test'/></div>\n}\n\nexport default App;\n",["51","52"],"/Users/guillaumetecher/typed-projects/front/src/utils/fetchWrapper.js",[],"/Users/guillaumetecher/typed-projects/front/src/contexts/ProjectContext.js",[],"/Users/guillaumetecher/typed-projects/front/src/utils/simpleSchema.js",[],"/Users/guillaumetecher/typed-projects/front/src/reportWebVitals.js",[],["53","54"],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":3,"column":31,"nodeType":"61","messageId":"62","endLine":3,"endColumn":35},{"ruleId":"63","severity":1,"message":"64","line":26,"column":46,"nodeType":"65","endLine":26,"endColumn":55,"suggestions":"66"},{"ruleId":"59","severity":1,"message":"67","line":110,"column":12,"nodeType":"61","messageId":"62","endLine":110,"endColumn":23},{"ruleId":"63","severity":1,"message":"68","line":38,"column":6,"nodeType":"65","endLine":38,"endColumn":8,"suggestions":"69"},{"ruleId":"59","severity":1,"message":"70","line":162,"column":12,"nodeType":"61","messageId":"62","endLine":162,"endColumn":23},{"ruleId":"59","severity":1,"message":"71","line":1,"column":8,"nodeType":"61","messageId":"62","endLine":1,"endColumn":12},{"ruleId":"55","replacedBy":"72"},{"ruleId":"57","replacedBy":"73"},{"ruleId":"55","replacedBy":"74"},{"ruleId":"57","replacedBy":"75"},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'Icon' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'generateTaskForm'. Either include it or remove the dependency array.","ArrayExpression",["78"],"'displayText' is defined but never used.","React Hook useEffect has missing dependencies: 'generateTaskForm' and 'projectId'. Either include them or remove the dependency array.",["79"],"'listColumns' is defined but never used.","'logo' is defined but never used.",["76"],["77"],["76"],["77"],"no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},{"desc":"82","fix":"83"},"Update the dependencies array to be: [generateTaskForm, politic]",{"range":"84","text":"85"},"Update the dependencies array to be: [generateTaskForm, projectId]",{"range":"86","text":"87"},[770,779],"[generateTaskForm, politic]",[1433,1435],"[generateTaskForm, projectId]"]